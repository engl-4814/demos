/* 
  GENERAL
*/

h1 {
  font-size: 3.5rem;
}
p {
  margin: 25px
}

/* Images */

img {
  width: 100%;
  height: 100%;
}

/* HEADER */

header, .flex-row {
  max-width: 1280px;
  margin: 50px auto;
}


/* FLEX SECTIONS */

/* Mobile-First */

/* 
  Using flexbox instead of default
  block behavior, because I want to
  apply the reverse feature.
*/
.flex-row {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  gap: 25px;
  background: #eee;
}

.flex-reverse { flex-direction: column-reverse; }

/* Medium to Larger Screens */
@media screen and (min-width: 600px) {
  
  .flex-row, .flex-reverse { flex-direction: row; }
  
  /* 
    Flex width classes for items to grow up to its
    basis of 60% / 30% respectively of the container's width.

    Values for flex: [GROW FACTOR] [SHRINK FACTOR] [BASIS]

    __GROW__ distributes available space between all flex siblings 
    within the parent container:display:

      - Flex Item W/H == (Parent container (W or H) / Total number of flex-grow values) * Flex item's flex-grow value
      - Given a 1280px wide flex container with 2 flex items, where the first has a flex-grow of 3 and other a flex-grow of 1: 
        - 960px == (1280px / 4) * 3
        - 320px == (1280px / 1) * 1

    __SHRINK__ is complicated! It enables you to define the rate that
    flex items shrink relative to its siblings. This rate only occurs 
    when the parent container has enough space to fit all flex items' 
    default basis size. UFFDA! When set to zero, you simply overwrite the
    default value of 1.

    __BASIS__ is the default value before any other factor is applied to the item.
    In this case, a minimum base width of
    200px is applied to provide a baseline
    width for each flex item to grow and shrink.

  */
  .flex__two-thirds { flex: 3 1 200px; }
  
  .flex__one-third { flex: 1 1 200px; }

  .textbox {
    font-size: 1.25em;
    min-height: 100px;
  }
  
  /* If object-fit supported, use this solution instead */
  @supports (object-fit: cover) {
    .object-fit img  {
      object-fit: cover;
    }
  }
}